//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomerManagement.Data.Sql {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SelectSql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SelectSql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CustomerManagement.Data.Sql.SelectSql", typeof(SelectSql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM address.
        /// </summary>
        internal static string Address {
            get {
                return ResourceManager.GetString("Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select customerId, appointment.userId, title, description, location, crewName, type, start, end, user.username, customer.name as customerName, address.phone as customerPhone from appointment INNER JOIN user ON user.id = appointment.userId INNER JOIN customer ON customer.id = appointment.customerId INNER JOIN address ON address.id = customer.addressId WHERE (start BETWEEN @start AND @end).
        /// </summary>
        internal static string Appointment {
            get {
                return ResourceManager.GetString("Appointment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT start, end FROM appointment WHERE userId = @userId AND ((start BETWEEN @start AND @end) OR (end BETWEEN @start AND @end));.
        /// </summary>
        internal static string AppointmentTimeCheck {
            get {
                return ResourceManager.GetString("AppointmentTimeCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM city.
        /// </summary>
        internal static string City {
            get {
                return ResourceManager.GetString("City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM country.
        /// </summary>
        internal static string Country {
            get {
                return ResourceManager.GetString("Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT crewName, customer.name as customerName, title, type, start, end FROM appointment INNER JOIN customer ON customer.id = appointment.customerId WHERE (start BETWEEN @start AND @end).
        /// </summary>
        internal static string CrewSchedule {
            get {
                return ResourceManager.GetString("CrewSchedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT customer.id, customer.active, customer.createdDate, customer.createdBy, customer.lastUpdatedBy, customer.lastUpdatedDate, customer.name, address1, address2, addressId, phone, city.name as cityName, postalCode, country.Name as countryName, city.id as cityId, country.id as countryId FROM customer INNER JOIN address 
        ///ON customer.addressId = address.id INNER JOIN city ON address.cityId = city.id INNER JOIN country ON city.countryId = country.id.
        /// </summary>
        internal static string Customer {
            get {
                return ResourceManager.GetString("Customer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT customer.id, name, start, end FROM customer INNER JOIN appointment ON appointment.customerId = customer.customerId WHERE appointment.userId = @userId;.
        /// </summary>
        internal static string CustomerReport {
            get {
                return ResourceManager.GetString("CustomerReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT id, username, active, createdDate, createdBy, lastUpdatedDate, lastUpdatedBy FROM user WHERE username = @username AND password = @password.
        /// </summary>
        internal static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(username) FROM user WHERE username = @username.
        /// </summary>
        internal static string UsernameCount {
            get {
                return ResourceManager.GetString("UsernameCount", resourceCulture);
            }
        }
    }
}
